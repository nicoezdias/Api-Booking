{
	"info": {
		"_postman_id": "90afdfa6-8463-42f1-ba57-88ccd2d4a806",
		"name": "ApiBookingV2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18045781"
	},
	"item": [
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Hotel",
					"item": [
						{
							"name": "crearHotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Hotel\",\n    \"description\": \"descripcion1\",\n    \"urlImage\": \"url1\",\n    \"text_alt\": \"imagen\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerHotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Category is Hotel\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.title).to.eql(\"Hotel\");",
											"  pm.expect(responseJson.description).to.eql(\"descripcion1\");",
											"  pm.expect(responseJson.urlImage).to.eql(\"url1\");",
											"  pm.expect(responseJson.text_alt).to.eql(\"imagen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/categories/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizarHotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"title\": \"Hotel\",\n    \"description\": \"descripcion1\",\n    \"urlImage\": \"urlCambiada1\",\n    \"text_alt\": \"imagen\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerHotelActualizado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Category is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.title).to.eql(\"Hotel\");",
											"  pm.expect(responseJson.description).to.eql(\"descripcion1\");",
											"  pm.expect(responseJson.urlImage).to.eql(\"urlCambiada1\");",
											"    pm.expect(responseJson.text_alt).to.eql(\"imagen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/categories/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Casa",
					"item": [
						{
							"name": "crearCasa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Casa\",\n    \"description\": \"descripcion2\",\n    \"urlImage\": \"url2\",\n    \"text_alt\": \"imagen\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerCasa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Category is Casa\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.title).to.eql(\"Casa\");",
											"  pm.expect(responseJson.description).to.eql(\"descripcion2\");",
											"  pm.expect(responseJson.urlImage).to.eql(\"url2\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/categories/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizarCasa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n    \"title\": \"Casa\",\n    \"description\": \"descripcion2\",\n    \"urlImage\": \"urlCambiada2\",\n    \"text_alt\": \"imagen2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/categories",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerCasaActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Category is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.title).to.eql(\"Casa\");",
											"  pm.expect(responseJson.description).to.eql(\"descripcion2\");",
											"  pm.expect(responseJson.urlImage).to.eql(\"urlCambiada2\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/categories/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"categories",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "traerTodas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Caracteristicas",
			"item": [
				{
					"name": "Gym",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gym\",\n    \"icon\": \"url\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/features",
									"host": [
										"{{url}}"
									],
									"path": [
										"features"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Feature is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.name).to.eql(\"Gym\");",
											"  pm.expect(responseJson.icon).to.eql(\"url\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/features/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"features",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"name\": \"Gym\",\n    \"icon\": \"urlCambiada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/features",
									"host": [
										"{{url}}"
									],
									"path": [
										"features"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Feature is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.name).to.eql(\"Gym\");",
											"  pm.expect(responseJson.icon).to.eql(\"urlCambiada\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/features/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"features",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Wifi",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Wifi\",\n    \"icon\": \"url\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/features",
									"host": [
										"{{url}}"
									],
									"path": [
										"features"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Feature is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.name).to.eql(\"Wifi\");",
											"  pm.expect(responseJson.icon).to.eql(\"url\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/features/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"features",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n    \"name\": \"Wifi\",\n    \"icon\": \"urlCambiada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/features",
									"host": [
										"{{url}}"
									],
									"path": [
										"features"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Feature is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.name).to.eql(\"Wifi\");",
											"  pm.expect(responseJson.icon).to.eql(\"urlCambiada\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/features/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"features",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "traerTodas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/features",
							"host": [
								"{{url}}"
							],
							"path": [
								"features"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "BuenosAires",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Buenos Aires\",\n    \"name_country\": \"Argentina\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/cities",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"City is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.name).to.eql(\"Buenos Aires\");",
											"  pm.expect(responseJson.name_country).to.eql(\"Argentina\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cities/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"name\": \"Cordoba\",\n    \"name_country\": \"Argentina\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/cities",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"City is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.name).to.eql(\"Cordoba\");",
											"  pm.expect(responseJson.name_country).to.eql(\"Argentina\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cities/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bogota",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Bogota\",\n    \"name_country\": \"Colombia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/cities",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"City is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.name).to.eql(\"Bogota\");",
											"  pm.expect(responseJson.name_country).to.eql(\"Colombia\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cities/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n    \"name\": \"Medellin\",\n    \"name_country\": \"Colombia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/cities",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"City is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.name).to.eql(\"Medellin\");",
											"  pm.expect(responseJson.name_country).to.eql(\"Colombia\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cities/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"cities",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "traerTodas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/cities",
							"host": [
								"{{url}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Politicas",
			"item": [
				{
					"name": "Party",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"Normas de la casa\",\n    \"description\": \"No se permiten fiestas\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/policies",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Policy is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.type).to.eql(\"Normas de la casa\");",
											"  pm.expect(responseJson.description).to.eql(\"No se permiten fiestas\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/policies/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"type\": \"Normas de la casa\",\n    \"description\": \"No fumar\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/policies",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Policy is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(1);",
											"  pm.expect(responseJson.type).to.eql(\"Normas de la casa\");",
											"  pm.expect(responseJson.description).to.eql(\"No fumar\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/policies/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Smoke",
					"item": [
						{
							"name": "crear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"Salud y seguridad\",\n    \"description\": \"Detector de humo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/policies",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerPorId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Policy is right\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.type).to.eql(\"Salud y seguridad\");",
											"  pm.expect(responseJson.description).to.eql(\"Detector de humo\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/policies/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n    \"type\": \"Salud y seguridad\",\n    \"description\": \"Deposito de seguridad\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/policies",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "traerActualizada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"pm.test(\"Policy is update\", () => {",
											"  const responseJson = pm.response.json();",
											"  pm.expect(responseJson.id).to.eql(2);",
											"  pm.expect(responseJson.type).to.eql(\"Salud y seguridad\");",
											"  pm.expect(responseJson.description).to.eql(\"Deposito de seguridad\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/policies/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"policies",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "traerTodas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/policies",
							"host": [
								"{{url}}"
							],
							"path": [
								"policies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PoductosCrear",
			"item": [
				{
					"name": "crearCordoba-Hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cordoba-Hotel\",\n    \"description\": \"descripcion\",\n    \"availability\": true,\n    \"stars\": 4,\n    \"category\": {\n        \"id\": 1\n    },\n    \"features\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ],\n    \"city\": {\n        \"id\": 1\n    },\n    \"policies\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "crearCordoba-Casa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cordoba-Casa\",\n    \"description\": \"descripcion\",\n    \"availability\": true,\n    \"stars\": 4,\n    \"category\": {\n        \"id\": 2\n    },\n    \"features\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ],\n    \"city\": {\n        \"id\": 1\n    },\n    \"policies\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "crearMedellin-Hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Producto1\",\n    \"description\": \"descripcion\",\n    \"availability\": true,\n    \"stars\": 4,\n    \"category\": {\n        \"id\": 1\n    },\n    \"features\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ],\n    \"city\": {\n        \"id\": 2\n    },\n    \"policies\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "crearMedellin-Casa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Producto1\",\n    \"description\": \"descripcion\",\n    \"availability\": true,\n    \"stars\": 4,\n    \"category\": {\n        \"id\": 2\n    },\n    \"features\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ],\n    \"city\": {\n        \"id\": 2\n    },\n    \"policies\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Imagenes",
			"item": [
				{
					"name": "img",
					"item": [
						{
							"name": "crearP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Camas\",\n    \"url\": \"url\",\n    \"text_alt\": \"imagen\",\n    \"profile\": true,\n    \"product\": {\n        \"id\": 2\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/images",
									"host": [
										"{{url}}"
									],
									"path": [
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "crearP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Camas\",\n    \"url\": \"url\",\n    \"text_alt\": \"imagen\",\n    \"profile\": true,\n    \"product\": {\n        \"id\": 3\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/images",
									"host": [
										"{{url}}"
									],
									"path": [
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "crearP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Camas\",\n    \"url\": \"url\",\n    \"text_alt\": \"imagen\",\n    \"profile\": true,\n    \"product\": {\n        \"id\": 4\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/images",
									"host": [
										"{{url}}"
									],
									"path": [
										"images"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "crear",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Camas\",\n    \"url\": \"url\",\n    \"text_alt\": \"imagen\",\n    \"profile\": true,\n    \"product\": {\n        \"id\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/images",
							"host": [
								"{{url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerPorId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Image is right\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(4);",
									"  pm.expect(responseJson.title).to.eql(\"Camas\");",
									"  pm.expect(responseJson.url).to.eql(\"url\");",
									"  pm.expect(responseJson.text_alt).to.eql(\"imagen\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/images/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 4,\n    \"title\": \"Camas\",\n    \"url\": \"urlactualizada\",\n    \"text_alt\": \"imagen\",\n    \"profile\": false,\n    \"product\": {\n        \"id\": 1\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/images",
							"host": [
								"{{url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerActualizada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Image is update\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(4);",
									"  pm.expect(responseJson.title).to.eql(\"Camas\");",
									"  pm.expect(responseJson.url).to.eql(\"urlactualizada\");",
									"  pm.expect(responseJson.text_alt).to.eql(\"imagen\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/images/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "crearProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Camas\",\n    \"url\": \"url\",\n    \"text_alt\": \"imagen\",\n    \"profile\": true,\n    \"product\": {\n        \"id\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/images",
							"host": [
								"{{url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerTodos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/images",
							"host": [
								"{{url}}"
							],
							"path": [
								"images"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Raiting",
			"item": [
				{
					"name": "rtg",
					"item": [
						{
							"name": "crearR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"score\": 4,\n    \"product\": {\n        \"id\": 2\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/ratings",
									"host": [
										"{{url}}"
									],
									"path": [
										"ratings"
									]
								}
							},
							"response": []
						},
						{
							"name": "crearR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"score\": 4,\n    \"product\": {\n        \"id\": 3\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/ratings",
									"host": [
										"{{url}}"
									],
									"path": [
										"ratings"
									]
								}
							},
							"response": []
						},
						{
							"name": "crearR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"score\": 4,\n    \"product\": {\n        \"id\": 4\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/ratings",
									"host": [
										"{{url}}"
									],
									"path": [
										"ratings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "crearRating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"score\": 4,\n    \"product\": {\n        \"id\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ratings",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "traer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Rating is right\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(4);",
									"  pm.expect(responseJson.score).to.eql(4);",
									"  pm.expect(responseJson.product.id).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":4,\n    \"score\": 5,\n    \"product\": {\n        \"id\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ratings",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerActualizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Rating is right\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(4);",
									"  pm.expect(responseJson.score).to.eql(5);",
									"  pm.expect(responseJson.product.id).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerTodos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ratings",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Poductos interactuar",
			"item": [
				{
					"name": "traerPorId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Product is right\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(1);",
									"  pm.expect(responseJson.name).to.eql(\"Cordoba-Hotel\");",
									"  pm.expect(responseJson.description).to.eql(\"descripcion\");",
									"  pm.expect(responseJson.stars).to.eql(4);",
									"  pm.expect(responseJson.categoryName).to.eql(\"Hotel\");",
									"  pm.expect(responseJson.avgRanting).to.eql(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":1,\n    \"name\": \"Cordoba-Hotel\",\n    \"description\": \"descripcionCambiada\",\n    \"availability\": true,\n    \"stars\": 5,\n    \"category\": {\n        \"id\": 1\n    },\n    \"features\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ],\n    \"city\": {\n        \"id\": 1\n    },\n    \"policies\": [\n        {\n            \"id\": 1\n        },\n        {\n            \"id\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerActualizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Product is right\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.id).to.eql(1);",
									"  pm.expect(responseJson.name).to.eql(\"Cordoba-Hotel\");",
									"  pm.expect(responseJson.description).to.eql(\"descripcionCambiada\");",
									"  pm.expect(responseJson.stars).to.eql(5);",
									"  pm.expect(responseJson.categoryName).to.eql(\"Hotel\");",
									"  pm.expect(responseJson.avgRanting).to.eql(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerTodos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerPorHotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/categories/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerPorCasa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/categories/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"categories",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerPorCordoba",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/city/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"city",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "traerPorMedellin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/city/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"city",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "eliminar",
			"item": [
				{
					"name": "eliminarImagen1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/images/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarImagen2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/images/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarImagen3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/images/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarImagen4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/images/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarImagen5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/images/5",
							"host": [
								"{{url}}"
							],
							"path": [
								"images",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarRating1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarRating2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarRating3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarRating4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ratings/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"ratings",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarProducto1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/products/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarProducto2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/products/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarProducto3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/products/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarProducto4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/products/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarPolitica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/policies/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"policies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarPolitica2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/policies/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"policies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarCuidad1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/cities/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"cities",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarCuidad2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/cities/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"cities",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarCaracteristica1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/features/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"features",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarCaracteristica2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/features/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"features",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarHotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/categories/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "eliminarCasa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"  pm.expect(pm.response.code).to.eql(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/categories/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}